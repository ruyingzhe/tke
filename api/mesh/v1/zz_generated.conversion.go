// +build !ignore_autogenerated

/*
 * Tencent is pleased to support the open source community by making TKEStack
 * available.
 *
 * Copyright (C) 2012-2020 Tencent. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use
 * this file except in compliance with the License. You may obtain a copy of the
 * License at
 *
 * https://opensource.org/licenses/Apache-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
 * WARRANTIES OF ANY KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations under the License.
 */

// Code generated by conversion-gen. DO NOT EDIT.

package v1

import (
	unsafe "unsafe"

	conversion "k8s.io/apimachinery/pkg/conversion"
	runtime "k8s.io/apimachinery/pkg/runtime"
	mesh "tkestack.io/tke/api/mesh"
)

func init() {
	localSchemeBuilder.Register(RegisterConversions)
}

// RegisterConversions adds conversion functions to the given scheme.
// Public to allow building arbitrary schemes.
func RegisterConversions(s *runtime.Scheme) error {
	if err := s.AddGeneratedConversionFunc((*ConfigMap)(nil), (*mesh.ConfigMap)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ConfigMap_To_mesh_ConfigMap(a.(*ConfigMap), b.(*mesh.ConfigMap), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*mesh.ConfigMap)(nil), (*ConfigMap)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_mesh_ConfigMap_To_v1_ConfigMap(a.(*mesh.ConfigMap), b.(*ConfigMap), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*ConfigMapList)(nil), (*mesh.ConfigMapList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_ConfigMapList_To_mesh_ConfigMapList(a.(*ConfigMapList), b.(*mesh.ConfigMapList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*mesh.ConfigMapList)(nil), (*ConfigMapList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_mesh_ConfigMapList_To_v1_ConfigMapList(a.(*mesh.ConfigMapList), b.(*ConfigMapList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*DataBase)(nil), (*mesh.DataBase)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_DataBase_To_mesh_DataBase(a.(*DataBase), b.(*mesh.DataBase), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*mesh.DataBase)(nil), (*DataBase)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_mesh_DataBase_To_v1_DataBase(a.(*mesh.DataBase), b.(*DataBase), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MeshManager)(nil), (*mesh.MeshManager)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_MeshManager_To_mesh_MeshManager(a.(*MeshManager), b.(*mesh.MeshManager), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*mesh.MeshManager)(nil), (*MeshManager)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_mesh_MeshManager_To_v1_MeshManager(a.(*mesh.MeshManager), b.(*MeshManager), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MeshManagerList)(nil), (*mesh.MeshManagerList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_MeshManagerList_To_mesh_MeshManagerList(a.(*MeshManagerList), b.(*mesh.MeshManagerList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*mesh.MeshManagerList)(nil), (*MeshManagerList)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_mesh_MeshManagerList_To_v1_MeshManagerList(a.(*mesh.MeshManagerList), b.(*MeshManagerList), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MeshManagerSpec)(nil), (*mesh.MeshManagerSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_MeshManagerSpec_To_mesh_MeshManagerSpec(a.(*MeshManagerSpec), b.(*mesh.MeshManagerSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*mesh.MeshManagerSpec)(nil), (*MeshManagerSpec)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_mesh_MeshManagerSpec_To_v1_MeshManagerSpec(a.(*mesh.MeshManagerSpec), b.(*MeshManagerSpec), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*MeshManagerStatus)(nil), (*mesh.MeshManagerStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_MeshManagerStatus_To_mesh_MeshManagerStatus(a.(*MeshManagerStatus), b.(*mesh.MeshManagerStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*mesh.MeshManagerStatus)(nil), (*MeshManagerStatus)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_mesh_MeshManagerStatus_To_v1_MeshManagerStatus(a.(*mesh.MeshManagerStatus), b.(*MeshManagerStatus), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*StorageBackend)(nil), (*mesh.StorageBackend)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_v1_StorageBackend_To_mesh_StorageBackend(a.(*StorageBackend), b.(*mesh.StorageBackend), scope)
	}); err != nil {
		return err
	}
	if err := s.AddGeneratedConversionFunc((*mesh.StorageBackend)(nil), (*StorageBackend)(nil), func(a, b interface{}, scope conversion.Scope) error {
		return Convert_mesh_StorageBackend_To_v1_StorageBackend(a.(*mesh.StorageBackend), b.(*StorageBackend), scope)
	}); err != nil {
		return err
	}
	return nil
}

func autoConvert_v1_ConfigMap_To_mesh_ConfigMap(in *ConfigMap, out *mesh.ConfigMap, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.Data = *(*map[string]string)(unsafe.Pointer(&in.Data))
	out.BinaryData = *(*map[string][]byte)(unsafe.Pointer(&in.BinaryData))
	return nil
}

// Convert_v1_ConfigMap_To_mesh_ConfigMap is an autogenerated conversion function.
func Convert_v1_ConfigMap_To_mesh_ConfigMap(in *ConfigMap, out *mesh.ConfigMap, s conversion.Scope) error {
	return autoConvert_v1_ConfigMap_To_mesh_ConfigMap(in, out, s)
}

func autoConvert_mesh_ConfigMap_To_v1_ConfigMap(in *mesh.ConfigMap, out *ConfigMap, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	out.Data = *(*map[string]string)(unsafe.Pointer(&in.Data))
	out.BinaryData = *(*map[string][]byte)(unsafe.Pointer(&in.BinaryData))
	return nil
}

// Convert_mesh_ConfigMap_To_v1_ConfigMap is an autogenerated conversion function.
func Convert_mesh_ConfigMap_To_v1_ConfigMap(in *mesh.ConfigMap, out *ConfigMap, s conversion.Scope) error {
	return autoConvert_mesh_ConfigMap_To_v1_ConfigMap(in, out, s)
}

func autoConvert_v1_ConfigMapList_To_mesh_ConfigMapList(in *ConfigMapList, out *mesh.ConfigMapList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]mesh.ConfigMap)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1_ConfigMapList_To_mesh_ConfigMapList is an autogenerated conversion function.
func Convert_v1_ConfigMapList_To_mesh_ConfigMapList(in *ConfigMapList, out *mesh.ConfigMapList, s conversion.Scope) error {
	return autoConvert_v1_ConfigMapList_To_mesh_ConfigMapList(in, out, s)
}

func autoConvert_mesh_ConfigMapList_To_v1_ConfigMapList(in *mesh.ConfigMapList, out *ConfigMapList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]ConfigMap)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_mesh_ConfigMapList_To_v1_ConfigMapList is an autogenerated conversion function.
func Convert_mesh_ConfigMapList_To_v1_ConfigMapList(in *mesh.ConfigMapList, out *ConfigMapList, s conversion.Scope) error {
	return autoConvert_mesh_ConfigMapList_To_v1_ConfigMapList(in, out, s)
}

func autoConvert_v1_DataBase_To_mesh_DataBase(in *DataBase, out *mesh.DataBase, s conversion.Scope) error {
	out.Host = in.Host
	out.Port = in.Port
	out.UserName = in.UserName
	out.Password = in.Password
	out.DbName = in.DbName
	return nil
}

// Convert_v1_DataBase_To_mesh_DataBase is an autogenerated conversion function.
func Convert_v1_DataBase_To_mesh_DataBase(in *DataBase, out *mesh.DataBase, s conversion.Scope) error {
	return autoConvert_v1_DataBase_To_mesh_DataBase(in, out, s)
}

func autoConvert_mesh_DataBase_To_v1_DataBase(in *mesh.DataBase, out *DataBase, s conversion.Scope) error {
	out.Host = in.Host
	out.Port = in.Port
	out.UserName = in.UserName
	out.Password = in.Password
	out.DbName = in.DbName
	return nil
}

// Convert_mesh_DataBase_To_v1_DataBase is an autogenerated conversion function.
func Convert_mesh_DataBase_To_v1_DataBase(in *mesh.DataBase, out *DataBase, s conversion.Scope) error {
	return autoConvert_mesh_DataBase_To_v1_DataBase(in, out, s)
}

func autoConvert_v1_MeshManager_To_mesh_MeshManager(in *MeshManager, out *mesh.MeshManager, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_v1_MeshManagerSpec_To_mesh_MeshManagerSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_v1_MeshManagerStatus_To_mesh_MeshManagerStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_v1_MeshManager_To_mesh_MeshManager is an autogenerated conversion function.
func Convert_v1_MeshManager_To_mesh_MeshManager(in *MeshManager, out *mesh.MeshManager, s conversion.Scope) error {
	return autoConvert_v1_MeshManager_To_mesh_MeshManager(in, out, s)
}

func autoConvert_mesh_MeshManager_To_v1_MeshManager(in *mesh.MeshManager, out *MeshManager, s conversion.Scope) error {
	out.ObjectMeta = in.ObjectMeta
	if err := Convert_mesh_MeshManagerSpec_To_v1_MeshManagerSpec(&in.Spec, &out.Spec, s); err != nil {
		return err
	}
	if err := Convert_mesh_MeshManagerStatus_To_v1_MeshManagerStatus(&in.Status, &out.Status, s); err != nil {
		return err
	}
	return nil
}

// Convert_mesh_MeshManager_To_v1_MeshManager is an autogenerated conversion function.
func Convert_mesh_MeshManager_To_v1_MeshManager(in *mesh.MeshManager, out *MeshManager, s conversion.Scope) error {
	return autoConvert_mesh_MeshManager_To_v1_MeshManager(in, out, s)
}

func autoConvert_v1_MeshManagerList_To_mesh_MeshManagerList(in *MeshManagerList, out *mesh.MeshManagerList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]mesh.MeshManager)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_v1_MeshManagerList_To_mesh_MeshManagerList is an autogenerated conversion function.
func Convert_v1_MeshManagerList_To_mesh_MeshManagerList(in *MeshManagerList, out *mesh.MeshManagerList, s conversion.Scope) error {
	return autoConvert_v1_MeshManagerList_To_mesh_MeshManagerList(in, out, s)
}

func autoConvert_mesh_MeshManagerList_To_v1_MeshManagerList(in *mesh.MeshManagerList, out *MeshManagerList, s conversion.Scope) error {
	out.ListMeta = in.ListMeta
	out.Items = *(*[]MeshManager)(unsafe.Pointer(&in.Items))
	return nil
}

// Convert_mesh_MeshManagerList_To_v1_MeshManagerList is an autogenerated conversion function.
func Convert_mesh_MeshManagerList_To_v1_MeshManagerList(in *mesh.MeshManagerList, out *MeshManagerList, s conversion.Scope) error {
	return autoConvert_mesh_MeshManagerList_To_v1_MeshManagerList(in, out, s)
}

func autoConvert_v1_MeshManagerSpec_To_mesh_MeshManagerSpec(in *MeshManagerSpec, out *mesh.MeshManagerSpec, s conversion.Scope) error {
	out.TenantID = in.TenantID
	out.ClusterName = in.ClusterName
	out.Version = in.Version
	out.DataBase = (*mesh.DataBase)(unsafe.Pointer(in.DataBase))
	out.TracingStorageBackend = (*mesh.StorageBackend)(unsafe.Pointer(in.TracingStorageBackend))
	out.MetricStorageBackend = (*mesh.StorageBackend)(unsafe.Pointer(in.MetricStorageBackend))
	return nil
}

// Convert_v1_MeshManagerSpec_To_mesh_MeshManagerSpec is an autogenerated conversion function.
func Convert_v1_MeshManagerSpec_To_mesh_MeshManagerSpec(in *MeshManagerSpec, out *mesh.MeshManagerSpec, s conversion.Scope) error {
	return autoConvert_v1_MeshManagerSpec_To_mesh_MeshManagerSpec(in, out, s)
}

func autoConvert_mesh_MeshManagerSpec_To_v1_MeshManagerSpec(in *mesh.MeshManagerSpec, out *MeshManagerSpec, s conversion.Scope) error {
	out.TenantID = in.TenantID
	out.ClusterName = in.ClusterName
	out.Version = in.Version
	out.DataBase = (*DataBase)(unsafe.Pointer(in.DataBase))
	out.TracingStorageBackend = (*StorageBackend)(unsafe.Pointer(in.TracingStorageBackend))
	out.MetricStorageBackend = (*StorageBackend)(unsafe.Pointer(in.MetricStorageBackend))
	return nil
}

// Convert_mesh_MeshManagerSpec_To_v1_MeshManagerSpec is an autogenerated conversion function.
func Convert_mesh_MeshManagerSpec_To_v1_MeshManagerSpec(in *mesh.MeshManagerSpec, out *MeshManagerSpec, s conversion.Scope) error {
	return autoConvert_mesh_MeshManagerSpec_To_v1_MeshManagerSpec(in, out, s)
}

func autoConvert_v1_MeshManagerStatus_To_mesh_MeshManagerStatus(in *MeshManagerStatus, out *mesh.MeshManagerStatus, s conversion.Scope) error {
	out.Version = in.Version
	out.Phase = mesh.AddonPhase(in.Phase)
	out.Reason = in.Reason
	out.RetryCount = in.RetryCount
	out.LastReInitializingTimestamp = in.LastReInitializingTimestamp
	return nil
}

// Convert_v1_MeshManagerStatus_To_mesh_MeshManagerStatus is an autogenerated conversion function.
func Convert_v1_MeshManagerStatus_To_mesh_MeshManagerStatus(in *MeshManagerStatus, out *mesh.MeshManagerStatus, s conversion.Scope) error {
	return autoConvert_v1_MeshManagerStatus_To_mesh_MeshManagerStatus(in, out, s)
}

func autoConvert_mesh_MeshManagerStatus_To_v1_MeshManagerStatus(in *mesh.MeshManagerStatus, out *MeshManagerStatus, s conversion.Scope) error {
	out.Version = in.Version
	out.Phase = AddonPhase(in.Phase)
	out.Reason = in.Reason
	out.RetryCount = in.RetryCount
	out.LastReInitializingTimestamp = in.LastReInitializingTimestamp
	return nil
}

// Convert_mesh_MeshManagerStatus_To_v1_MeshManagerStatus is an autogenerated conversion function.
func Convert_mesh_MeshManagerStatus_To_v1_MeshManagerStatus(in *mesh.MeshManagerStatus, out *MeshManagerStatus, s conversion.Scope) error {
	return autoConvert_mesh_MeshManagerStatus_To_v1_MeshManagerStatus(in, out, s)
}

func autoConvert_v1_StorageBackend_To_mesh_StorageBackend(in *StorageBackend, out *mesh.StorageBackend, s conversion.Scope) error {
	out.StorageType = in.StorageType
	out.StorageAddresses = *(*[]string)(unsafe.Pointer(&in.StorageAddresses))
	out.QueryAddress = in.QueryAddress
	out.UserName = in.UserName
	out.Password = in.Password
	return nil
}

// Convert_v1_StorageBackend_To_mesh_StorageBackend is an autogenerated conversion function.
func Convert_v1_StorageBackend_To_mesh_StorageBackend(in *StorageBackend, out *mesh.StorageBackend, s conversion.Scope) error {
	return autoConvert_v1_StorageBackend_To_mesh_StorageBackend(in, out, s)
}

func autoConvert_mesh_StorageBackend_To_v1_StorageBackend(in *mesh.StorageBackend, out *StorageBackend, s conversion.Scope) error {
	out.StorageType = in.StorageType
	out.StorageAddresses = *(*[]string)(unsafe.Pointer(&in.StorageAddresses))
	out.QueryAddress = in.QueryAddress
	out.UserName = in.UserName
	out.Password = in.Password
	return nil
}

// Convert_mesh_StorageBackend_To_v1_StorageBackend is an autogenerated conversion function.
func Convert_mesh_StorageBackend_To_v1_StorageBackend(in *mesh.StorageBackend, out *StorageBackend, s conversion.Scope) error {
	return autoConvert_mesh_StorageBackend_To_v1_StorageBackend(in, out, s)
}
